// <auto-generated />
using System;
using GismeteoParser.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GismeteoParser.Data.Migrations
{
    [DbContext(typeof(CityWeatherDbContext))]
    [Migration("20211030163743_AddedRefToCityWeather")]
    partial class AddedRefToCityWeather
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GismeteoParser.Data.CityWeather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CitiesWeather");
                });

            modelBuilder.Entity("GismeteoParser.Data.OneDayWeather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityWeatherId")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayPlusMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTempC")
                        .HasColumnType("int");

                    b.Property<int>("MaxWindSpeedMs")
                        .HasColumnType("int");

                    b.Property<int>("MinTempC")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecipitationMm")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CityWeatherId");

                    b.ToTable("OneDayWeather");
                });

            modelBuilder.Entity("GismeteoParser.Data.OneDayWeather", b =>
                {
                    b.HasOne("GismeteoParser.Data.CityWeather", "CityWeather")
                        .WithMany("DaysWeather")
                        .HasForeignKey("CityWeatherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
